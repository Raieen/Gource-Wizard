version: '3'

services:
  proxy:
    container_name: nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
  frontend:
    container_name: frontend
    volumes:
      - ./frontend/:/usr/src/frontend/
    build:
      dockerfile: Dockerfile
      context: ./frontend
      args:
        environment: development
    ports:
      - "3000:3000"
  #
  # Backend
  #
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend/
      args:
        environment: development
    volumes:
      - ./backend/:/usr/src/backend
      # environment:
      # - GH_CLIENT_ID=71d18ade70ffd0d06a1d
      # - GH_CLIENT_SECRET=a98ad2cd6344c33308e6e2ce3eabf14c076e8a8f
      # - GH_WEBHOOK_SECRET=secet
      # - DB_USER=root
      # - DB_PASS=password
      # - DB_HOST=mongo
      # - DB_NAME=gource-wizard
      # - URL=https://09cf-70-48-15-189.ngrok.io
      # - FRONTEND_URL=https://09cf-70-48-15-189.ngrok.io
      # - SESSION_SECRET=secret
      # - NODE_ENV=development
      # - PORT=4000
      # - QUEUE_URL=amqp://rabbitmq:5672
      # - QUEUE_NAME=render
    depends_on:
      - mongo
      - rabbitmq
    ports:
      - "4000:4000"
  worker:
    build:
      dockerfile: Dockerfile
      context: ./worker/
    environment:
      - QUEUE_AMQP_URL=amqp://rabbitmq:5672
      - QUEUE_NAME=render
      - AWS_ACCESS_KEY_ID=AKIA3SK6BFZU2XCMKO6A
      - AWS_SECRET_ACCESS_KEY=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
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET=s3://c09-videos
      - CDN_ROOT=https://d1c7jwqsei1woa.cloudfront.net/
      - BACKEND_URL=http://backend:4000/graphql
      - QUEUE_PREFETCH_LIMIT=5
    volumes:
      - ./worker/:/worker
    depends_on:
      - rabbitmq
      - mongo
      # - backend
    restart: always
  #
  # Infrastructure
  #
  rabbitmq:
    # Credentials: guest;guest
    container_name: rabbitmq
    hostname: rabbitmq # Needed, see docs: https://hub.docker.com/_/rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672 # AMQP
      - 15672:15672 # Management UI
  mongo:
    image: mongo:5.0
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: gource-wizard
    volumes:
      - mongo_data:/data/db
    restart: always

  mongo-express:
    image: mongo-express:0.54
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    depends_on:
      - mongo

volumes:
  mongo_data:
